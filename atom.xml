<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Call/cc</title>
 <link href="http://blog.call-cc.be/atom.xml" rel="self"/>
 <link href="http://blog.call-cc.be/"/>
 <updated>2015-12-14T14:47:46+01:00</updated>
 <id>http://blog.call-cc.be</id>
 <author>
   <name>Christophe De Troyer</name>
   <email>cdetroye@vub.ac.be</email>
 </author>

 
 <entry>
   <title>How to write a blogpost</title>
   <link href="http://blog.call-cc.be/2015/12/14/writing/"/>
   <updated>2015-12-14T00:00:00+01:00</updated>
   <id>http://blog.call-cc.be/2015/12/14/writing</id>
   <content type="html">&lt;h2 id=&quot;basic-layout-of-a-blog-post&quot;&gt;Basic layout of a blog post&lt;/h2&gt;

&lt;p&gt;To create a new blogpost its as simple as creating a new file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;
directory. The naming scheme is a bit tricky, though. You have create a file
using the scheme &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;. For example, this blog is named
&lt;code class=&quot;highlighter-rouge&quot;&gt;2015-12-14-writing.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have &lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt;ed that file you can proceed putting content in it. The
first thing you have to do is create a so-called ‘Front Matter’. A silly name
for a header.&lt;/p&gt;

&lt;p&gt;The Front Matter for this post, for example is shown below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: How to write a blogpost
description: Introduction to writing a blogpost using Jekyll
comments: true
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; directive tells Jekyll what kind of page this is. It’s the name of
the layout you want to use. Looking at the &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout&lt;/code&gt; directory we see that we
have &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;page.html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt;. The value is just the filename
without extension. For your blogposts this will obviously be &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; directive is… the title. The description is used to describe the
content of this page. The blog is configured such that the description will be
used for some minor SEO. You want people to read this stuff, right? Then make it
a good one. And finally the &lt;code class=&quot;highlighter-rouge&quot;&gt;comments&lt;/code&gt; directive, as explained in the
introduction post &lt;a href=&quot;/2015/12/12/readme/&quot;&gt;1&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you have that set up it’s basically just writing blog posts. You can use
the regular Markdown syntax you are used to. Check out a basic markdown guide on
how to do this if you are not familiar.&lt;/p&gt;

&lt;h3 id=&quot;mathjax&quot;&gt;Mathjax&lt;/h3&gt;

&lt;p&gt;Since this blogging template has been setup with some basic MathJax I will spend
a little time on how I have done this and how you can use it.&lt;/p&gt;

&lt;p&gt;The mathjax platform, for me in particular, lacked some expresivity. I write a
lot of “greek” and for that I use the &lt;code class=&quot;highlighter-rouge&quot;&gt;mathpartir&lt;/code&gt; library. Mathjax does not
support this so I have predefined a few macros to mitigate that shortcoming as
much as possible. These are present in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_include/mathjax.html&lt;/code&gt; file. So when
you want to write more than basic mathjax, in particular, derivation rules and
such, you should alwyas import that file first.&lt;/p&gt;

&lt;p&gt;To add some latex to your post you can then use the regular mathjax.&lt;/p&gt;

&lt;p&gt;A simple example, that does not require any imports, is the following:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;This \ is \ \textbf{super} \ \texttt{awesome}&lt;/script&gt;

&lt;p&gt;which is, in the source code, nothing more than this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;This &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ \textbf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ \texttt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction</title>
   <link href="http://blog.call-cc.be/2015/12/12/readme/"/>
   <updated>2015-12-12T00:00:00+01:00</updated>
   <id>http://blog.call-cc.be/2015/12/12/readme</id>
   <content type="html">&lt;p&gt;This is a minimal working example of a research blog. It is based on templates
I found online, extended with bits and pieces to make it easier to use for
programming language researchers.&lt;/p&gt;

&lt;h2 id=&quot;what-it-does&quot;&gt;What it does&lt;/h2&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;It uses &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-scholar&lt;/code&gt; to make it easy to cite papers in a blogpost and/or
build bibliographies.&lt;/li&gt;
  &lt;li&gt;It has Google Analytics ready for use.&lt;/li&gt;
  &lt;li&gt;It is easy to add Disqus comments to individual posts&lt;/li&gt;
  &lt;li&gt;It has &lt;code class=&quot;highlighter-rouge&quot;&gt;mathjax&lt;/code&gt; enabled so you can type in some fancy greek.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;I was wanting an easy blog tool to write blog posts about my research. However,
using Wordpress and the linkes requires a webserver which has PHP and whatnot
enabled. I am a researcher. I dont want to spend time configuring that stuff.&lt;/p&gt;

&lt;p&gt;Most researchers have a webspace available at their university and can put some
static html files on there. That is what this thing does. You build it, you
rsync it and you are done. Easy.&lt;/p&gt;

&lt;h2 id=&quot;initial-setup&quot;&gt;Initial setup&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;There is some setup involved to get this blog up and running for you
personally. We will go over each part.&lt;/p&gt;

&lt;h3 id=&quot;comments&quot;&gt;Comments&lt;/h3&gt;

&lt;p&gt;To enable comments you will need a Disqus account. Go over to
&lt;a href=&quot;https://disqus.com/&quot;&gt;https://disqus.com/&lt;/a&gt; and create an account. After you have set that up and have
verified your account you should be able to add Disqus to your website by going
to &lt;a href=&quot;https://disqus.com/admin/create/&quot;&gt;https://disqus.com/admin/create/&lt;/a&gt;. Follow the tutorial and then you should
see the code to add Disqus to a universal webpage. An example might look like
the one below. Once you have this code, replace the existing code in
&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/comments.html&lt;/code&gt; with yours. Be sure to keep in the &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;-test, this is
what enables you to add them to your site.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page&#39;s canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page&#39;s unique identifier variable
    };
    */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// DON&#39;T EDIT BELOW THIS LINE&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;//christophedetroyer.disqus.com/embed.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-timestamp&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://disqus.com/?ref_noscript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nofollow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Assuming you have set all this up you can open up any post from the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;
directory and add a commenting section to the bottom of that post by changing
the header.&lt;/p&gt;

&lt;p&gt;A regular post will look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: My super cool post
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you want comments in the end just change it to the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: My super cool post
comments: true
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any management of your comments and/or settings should be taken care of on the Disqus website.&lt;/p&gt;

&lt;h3 id=&quot;google-analytics&quot;&gt;Google Analytics&lt;/h3&gt;

&lt;p&gt;To enable analytics you will have to create a free account on
&lt;a href=&quot;http://www.google.com/analytics/&quot;&gt;http://www.google.com/analytics/&lt;/a&gt;. Again, you will get some simple
copy/paste-able code. Replace the code in &lt;code class=&quot;highlighter-rouge&quot;&gt;_include/google_analytics.html&lt;/code&gt; with
your own code.&lt;/p&gt;

&lt;p&gt;Once you have that copied all your webpages will be tracked by the Google
Analytics engine. This is done because of the templating system of Jekyll. If
you head over to &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout/default.html&lt;/code&gt; page, which is the default template for
&lt;em&gt;all&lt;/em&gt; your pages, you will see that there is a line:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;google_analytics.html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which includes the JavaScript on each page. If you don’t want fancy analytics
you can simply turn them off by removing the line from the
&lt;code class=&quot;highlighter-rouge&quot;&gt;_layout/default.html&lt;/code&gt; page.&lt;/p&gt;

&lt;h3 id=&quot;citations&quot;&gt;Citations&lt;/h3&gt;

&lt;p&gt;Citations are a bit of a trick to get working. You can either use them to list
your own publications, or to actually add resources to a webpost. Let’s assume
for a moment here I have publications. &lt;em&gt;Ahum&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I have a bibtex file named &lt;code class=&quot;highlighter-rouge&quot;&gt;journals.bib&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@inproceedings{pyla2011composing,
 author = {Pyla, Hari K.},
 title = {Composing Locks by Decomposing Deadlocks},
 booktitle = {Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion},
 series = {OOPSLA &#39;11},
 year = {2011},
 isbn = {978-1-4503-0942-4},
 location = {Portland, Oregon, USA},
 pages = {67--70},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2048147.2048176},
 doi = {10.1145/2048147.2048176},
 acmid = {2048176},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrent programming, deadlock detection and recovery, program analysis, runtime systems, speculative parallelism and coarse-grain speculation},
} 

@inproceedings{swalens2014towards,
  author    = &quot;Swalens, Janwillem and Marr, Stefan and De Koster, Joeri and Van Cutsem, Tom&quot;,
  year      = &quot;2014&quot;,
  title     = &quot;Towards Composable Concurrency Abstractions&quot;,
  editor    = &quot;Donaldson, Alastair F. and Vasconcelos, Vasco T.&quot;,
  booktitle = &quot;{\rm Proceedings 7th Workshop on}
               Programming Language Approaches to Concurrency and Communication-cEntric Software,
               {\rm Grenoble, France, 12 April 2014}&quot;,
  series    = &quot;Electronic Proceedings in Theoretical Computer Science&quot;,
  volume    = &quot;155&quot;,
  publisher = &quot;Open Publishing Association&quot;,
  pages     = &quot;54-60&quot;,
  doi       = &quot;10.4204/EPTCS.155.8&quot;,
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To add all all the references listed in the file &lt;code class=&quot;highlighter-rouge&quot;&gt;journals.bib&lt;/code&gt; into a post I
just have to put &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;bibliography&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;journals.bib&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;
into the post and that will generate the following output.&lt;/p&gt;

&lt;hr /&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;abbr&gt;[swalens2014towards]&lt;/abbr&gt; &lt;span id=&quot;swalens2014towards&quot;&gt;Swalens, J., Marr, S., De Koster, J., &amp;amp; Van Cutsem, T. (2014). Towards Composable Concurrency Abstractions. In A. F. Donaldson &amp;amp; V. T. Vasconcelos (Eds.), &lt;i&gt;\rm Proceedings 7th Workshop on
               Programming Language Approaches to Concurrency and Communication-cEntric Software,
               \rm Grenoble, France, 12 April 2014&lt;/i&gt; (Vol. 155, pp. 54–60). Open Publishing Association. doi:10.4204/EPTCS.155.8&lt;/span&gt; &lt;/li&gt;
&lt;li&gt;&lt;abbr&gt;[pyla2011composing]&lt;/abbr&gt; &lt;span id=&quot;pyla2011composing&quot;&gt;Pyla, H. K. (2011). Composing Locks by Decomposing Deadlocks. In &lt;i&gt;Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion&lt;/i&gt; (pp. 67–70). New York, NY, USA: ACM. doi:10.1145/2048147.2048176&lt;/span&gt;   &lt;a href=&quot;/repository/pyla2011composing.pdf&quot;&gt;PDF&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;You can also attach a .pdf file to a reference entry as well. First, check the
keyword of the bibtex entry. In my example I have used &lt;code class=&quot;highlighter-rouge&quot;&gt;pyla2011composing&lt;/code&gt; for
the first reference. Notice that in this git repository there is a directory
named &lt;code class=&quot;highlighter-rouge&quot;&gt;repository/&lt;/code&gt;. If you put a file in there with the name being a keyword in
any bibtex entry (e.g., &lt;code class=&quot;highlighter-rouge&quot;&gt;pyla2011composing.pdf&lt;/code&gt;), jekyll will detect this file
and automatically insert a pdf link after the citation.&lt;/p&gt;

&lt;h4 id=&quot;bibliography&quot;&gt;Bibliography&lt;/h4&gt;

&lt;p&gt;There is a page available to list your own bibliography. This allows you to list
your own publications based on seperate bib files. Check out &lt;code class=&quot;highlighter-rouge&quot;&gt;bibliography.md&lt;/code&gt;
for more details. Basically the page just generates three seperate bibliography
tables. One for journals, conferences and workshops. You can replace the content
in this files to your liking.&lt;/p&gt;

&lt;h4 id=&quot;citing&quot;&gt;Citing&lt;/h4&gt;

&lt;p&gt;You can cite papers as well from any bibliography &lt;a href=&quot;#pyla2011composing&quot;&gt;(Pyla, 2011)&lt;/a&gt;. To do so you can take several approaches. Recall that your
blog has a “default” references file. In this particular case it is
&lt;code class=&quot;highlighter-rouge&quot;&gt;bibliography.bib&lt;/code&gt; which is located in &lt;code class=&quot;highlighter-rouge&quot;&gt;_bibliography/&lt;/code&gt;. Any entry from that
file can be cited using &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;cite&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;. However, if you
want to cite a specific reference from a file you have to specify that file
explicitly. For example, the citation &lt;a href=&quot;#pyla2011composing&quot;&gt;(Pyla, 2011)&lt;/a&gt; is inserted using &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;cite&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;pyla2011composing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;journals&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; because the entry is not present in the default &lt;code class=&quot;highlighter-rouge&quot;&gt;.bib&lt;/code&gt; file, but in an
arbitrary file called &lt;code class=&quot;highlighter-rouge&quot;&gt;journals.bib&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To list all the references that you have listed in a post you have to explicitly
tell Jekyll to generate them. For example, I have cited entries from the file
&lt;code class=&quot;highlighter-rouge&quot;&gt;journals.bib&lt;/code&gt; so at the end of this post I have inserted &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;bibliography&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--cited&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--file&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;journals&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;--cited&lt;/code&gt; flag means
that only cited references will be listed and the &lt;code class=&quot;highlighter-rouge&quot;&gt;--file&lt;/code&gt; specifies the files
from which the imports came. Obviously, if you cite from mutliple files you have
to insert all the files seperately.&lt;/p&gt;

&lt;h3 id=&quot;mathjax&quot;&gt;Mathjax&lt;/h3&gt;

&lt;p&gt;Mathjax is a very powerful Latex renderingtool in JavaScript. However, it is not
as simple as copy-pasting some code in between &lt;code class=&quot;highlighter-rouge&quot;&gt;$$&lt;/code&gt;. I have provided a few
abstractions (mathpartir in particular) in a file &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/mathjaxmacros.html&lt;/code&gt;. If
you want to write using these abstractions, make sure to include them in every
blog post you need them in by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;mathjaxmacros.html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; directive
to the top of your post.&lt;/p&gt;

&lt;p&gt;Then it is somewhat easier to paste mathpartir code in there. To demonstrate,
have the STLC application rule.&lt;/p&gt;

&lt;div&gt;
$$
\newcommand{\lolli}{\multimap}
\newcommand{\tensor}{\otimes}
\newcommand{\with}{\&amp;amp;}
\newcommand{\all}[2]{\forall {#1}.\;{#2}}
\newcommand{\fix}[2]{\mu {#1}.\;{#2}}

\newcommand{\letv}[3]{\mathsf{let}\,{#1} = {#2}\;\mathsf{in}\;{#3}}

\newcommand{\Fun}[2]{\Lambda {#1}.\;{#2}}
\newcommand{\fun}[2]{\lambda {#1}.\;{#2}}

\newcommand{\unit}{\left(\right)}
\newcommand{\letunit}[2]{\letv{\unit}{#1}{#2}}
\newcommand{\pair}[2]{\left({#1},{#2}\right)}
\newcommand{\letpair}[4]{\letv{\pair{#1}{#2}}{#3}{#4}}
\newcommand{\unita}{\left[\right]}
\newcommand{\paira}[2]{\left[{#1}, {#2}\right]}
\newcommand{\fst}[1]{\mathsf{fst}\,{#1}}
\newcommand{\snd}[1]{\mathsf{snd}\,{#1}}
\newcommand{\inl}[1]{\mathsf{inl}\,{#1}}
\newcommand{\inr}[1]{\mathsf{inr}\,{#1}}
\newcommand{\case}[5]{\mathsf{case}({#1}, \inl{#2} \to {#3}, \inr{#4} \to {#5})}
\newcommand{\abort}[1]{\mathsf{abort}\,{#1}}
\newcommand{\fold}[1]{\mathsf{in}\,{#1}}
\newcommand{\unfold}[1]{\mathsf{out}\,{#1}}

\newcommand{\judge}[4]{{#1};{#2} \vdash {#3} : {#4}}
\newcommand{\judgetp}[2]{{#1} \ \vdash {#2} : \mathsf{type}}
\newcommand{\judgectx}[2]{{#1} \vdash {#2} : \mathsf{ctx}}

%% Rule names

\newcommand{\rulename}[3]{{#2}{\mathrm{#3}}_{\mathrm{#1}}}
\newcommand{\intro}[2][]{\rulename{#1}{#2}{I}}
\newcommand{\elim}[2][]{\rulename{#1}{#2}{E}}

\newcommand{\Var}{\rulename{}{}{Var}}
\newcommand{\AllI}{\intro{\forall}}
\newcommand{\AllE}{\elim{\forall}}
\newcommand{\LolliI}{\intro{\lolli}}
\newcommand{\LolliE}{\elim{\lolli}}
\newcommand{\UnitI}{\intro{1}}
\newcommand{\UnitE}{\elim{1}}
\newcommand{\TensorI}{\intro{\tensor}}
\newcommand{\TensorE}{\elim{\tensor}}
\newcommand{\TopI}{\intro{\top}}
\newcommand{\TopE}{\elim{\top}}
\newcommand{\WithI}{\intro{\with}}
\newcommand{\WithEFst}{\elim[fst]{\with}}
\newcommand{\WithESnd}{\elim[snd]{\with}}
\newcommand{\ZeroI}{\intro{0}}
\newcommand{\ZeroE}{\elim{0}}
\newcommand{\SumIInl}{\intro[inl]{\oplus}}
\newcommand{\SumIInr}{\intro[inr]{\oplus}}
\newcommand{\SumE}{\elim{\oplus}}

\newcommand{\MuI}{\intro{\mu}}
\newcommand{\MuE}{\elim{\mu}}

\newcommand{\size}[1]{\left|#1\right|}
\newcommand{\inferrule}[3][]{\frac{#2}{#3}\;{#1}}
$$
&lt;/div&gt;

$$
\inferrule[T-App]
          {\Gamma \vdash t_1 : T_{11} \rightarrow T_{12} \quad \Gamma \vdash t_2 : T_{11} }
          {\Gamma \ \vdash t_1 t_2 : T_{12} }
$$

&lt;p&gt;The above rule has been generated by the following syntax in the post. Note that
there are some nasty prefixed and suffixes to keep the markdown parser in check.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% include mathjaxmacros.html %}

{% raw %}{::nomarkdown}
$$
\inferrule[T-App]
          {\Gamma \vdash t_1 : T_{11} \rightarrow T_{12} \quad \Gamma \vdash t_2 : T_{11} }
          {\Gamma \ \vdash t_1 t_2 : T_{12} }
$$
{:/}{% endraw %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;abbr&gt;[pyla2011composing]&lt;/abbr&gt; &lt;span id=&quot;pyla2011composing&quot;&gt;Pyla, H. K. (2011). Composing Locks by Decomposing Deadlocks. In &lt;i&gt;Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion&lt;/i&gt; (pp. 67–70). New York, NY, USA: ACM. doi:10.1145/2048147.2048176&lt;/span&gt;   &lt;a href=&quot;/repository/pyla2011composing.pdf&quot;&gt;PDF&lt;/a&gt; &lt;/li&gt;&lt;/ol&gt;
</content>
 </entry>
 

</feed>
